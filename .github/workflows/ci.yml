name: CI
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test-mock:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo (registry + target)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Build & test (mock backend)
        run: |
          set -eux
          cargo build --features "mock,kyber768,dilithium2" --verbose
          cargo test  --features "mock,kyber768,dilithium2,testing" --verbose

  test-liboqs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Install build deps
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build build-essential pkg-config

      # Get the current liboqs main commit to key the cache
      - name: Resolve liboqs SHA
        id: liboqs-sha
        run: |
          set -eux
          echo "sha=$(git ls-remote https://github.com/open-quantum-safe/liboqs refs/heads/main | cut -f1)" >> "$GITHUB_OUTPUT"

      - name: Cache liboqs install
        id: cache-liboqs
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.local/liboqs
          key: liboqs-${{ runner.os }}-${{ steps.liboqs-sha.outputs.sha }}

      - name: Build & install liboqs (clone to temp if cache missed)
        if: steps.cache-liboqs.outputs.cache-hit != 'true'
        env:
          PREFIX: ${{ github.workspace }}/.local/liboqs
          SRC: ${{ runner.temp }}/liboqs-src
        run: |
          set -eux
          rm -rf "$SRC"
          git clone --depth 1 https://github.com/open-quantum-safe/liboqs "$SRC"
          cmake -S "$SRC" -B "$SRC/build" -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DOQS_DIST_BUILD=ON \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_INSTALL_PREFIX="$PREFIX"
          cmake --build "$SRC/build" --target install

      - name: Export lib paths
        env:
          PREFIX: ${{ github.workspace }}/.local/liboqs
        run: |
          echo "LIBOQS_DIR=$PREFIX" >> "$GITHUB_ENV"
          echo "PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig" >> "$GITHUB_ENV"
          echo "LD_LIBRARY_PATH=$PREFIX/lib" >> "$GITHUB_ENV"

      - name: Cache cargo (registry + target)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Build & test (real liboqs backend)
        env:
          LIBOQS_DIR: ${{ env.LIBOQS_DIR }}
          PKG_CONFIG_PATH: ${{ env.PKG_CONFIG_PATH }}
          LD_LIBRARY_PATH: ${{ env.LD_LIBRARY_PATH }}
        run: |
          set -eux
          cargo build --features "liboqs,kyber768,dilithium2,strict" --verbose
          cargo test  --features "liboqs,kyber768,dilithium2" --verbose

